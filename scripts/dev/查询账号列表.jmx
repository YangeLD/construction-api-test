<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询账号列表" enabled="true">
      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="HTTPSampler.domain"></stringProp>
      <stringProp name="HTTPSampler.port"></stringProp>
      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
      <stringProp name="HTTPSampler.response_timeout"></stringProp>
      <stringProp name="HTTPSampler.protocol"></stringProp>
      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
      <stringProp name="HTTPSampler.path">/api/v1/accounts</stringProp>
      <stringProp name="HTTPSampler.method">GET</stringProp>
      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
      <boolProp name="HTTPSampler.monitor">false</boolProp>
      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
    </HTTPSamplerProxy>
    <hashTree>
      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言http状态" enabled="true">
        <collectionProp name="Asserion.test_strings">
          <stringProp name="49586">200</stringProp>
        </collectionProp>
        <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
        <boolProp name="Assertion.assume_success">false</boolProp>
        <intProp name="Assertion.test_type">8</intProp>
      </ResponseAssertion>
      <hashTree/>
      <BSFAssertion guiclass="TestBeanGUI" testclass="BSFAssertion" testname="断言response对象" enabled="true">
        <stringProp name="scriptLanguage">javascript</stringProp>
        <stringProp name="parameters"></stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="script">try {
 	var response = prev.getResponseDataAsString();//获取响应信息
 	//log.info(&quot;response===&quot;+response);
 	//var code = prev.getResponseCode();//获取响应code
  	var jsonOutputObj = JSON.parse(response);
	var count = jsonOutputObj.length;
	log.info(&quot;count====&quot;+count);
  	//if(typeof(count) == &quot;undefined&quot; &amp;&amp; code ==404){
  		for(var i=0;i&lt;count;i++){
  			var name = jsonOutputObj[i].name;
  			//log.info(&quot;name====&quot;+name);
			if (typeof(name) == &quot;undefined&quot;) {
		   		log.info(&quot;测试查询账号列表API接口，返回JSON对象里缺少name字段&quot;);
			}   
			var gender = jsonOutputObj[i].gender;
			if (typeof(gender) == &quot;undefined&quot;) {
		   		log.info(&quot;测试查询账号列表API接口，返回JSON对象里缺少gender字段&quot;);
			}  
			var  email = jsonOutputObj[i].email;
			if (typeof(email) == &quot;undefined&quot;) {
		   		log.info(&quot;测试查询账号列表API接口，返回JSON对象里缺少email字段&quot;);
			}  
			var fundsBalance = jsonOutputObj[i].fundsBalance;
			if (typeof(fundsBalance) == &quot;undefined&quot;) {
		   		log.info(&quot;测试查询账号列表API接口，返回JSON对象里缺少fundsBalance字段&quot;);
			}  
  			}
  		
  		//}else{
  		//	}
	
	//log.info(&quot;222222&quot;);
} catch(e) {
	//log.info(&quot;3333333&quot;);
      prev.setSuccessful(false);
      prev.setResponseMessage(&quot;Invalid response. Expected a valid JSON.&quot;);

}


</stringProp>
      </BSFAssertion>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
